levels = c("1-24","25-49","50-199","200-499","500-1999",">2000"))
qplot(enabledusers, d30, data = cscd.df, geom = "point") +
geom_point(size = 5) +
xlab("Enabled Users") +
ylab("30 Day Unique Users") +
stat_smooth(method = "lm", level = .99) +
theme_bw(base_size = 18)
mod.e <- lm(d30 ~ enabledusers, data = cscd.df)
mod.e
summary(mod.e)
str(cscd.df)
mod.e <- lm(d30 ~ enabledusers, data = subset(cscd.df, enabledusers < 5000))
summary(mod.e)
mod.e <- lm(d30 ~ enabledusers, data = subset(cscd.df, enabledusers < 500))
summary(mod.e)
mod.e <- lm(d30 ~ enabledusers, data = subset(cscd.df, enabledusers < 50))
summary(mod.e)
str(cscd.df)
qplot(enabledusers, d30, data = subset(cscd.df, enabledusers < sub_num), geom = "point") +
geom_point(size = 5) +
xlab("Enabled Users") +
ylab("30 Day Unique Users") +
stat_smooth(method = "lm", level = .99) +
theme_bw(base_size = 18)
mod.e <- lm(d30 ~ enabledusers, data = subset(cscd.df, enabledusers < sub_num))
summary(mod.e)
sub_num = 500
qplot(enabledusers, d30, data = subset(cscd.df, enabledusers < sub_num), geom = "point") +
geom_point(size = 5) +
xlab("Enabled Users") +
ylab("30 Day Unique Users") +
stat_smooth(method = "lm", level = .99) +
theme_bw(base_size = 18)
sub_num = 500
qplot(enabledusers, d30, data = subset(cscd.df, enabledusers < sub_num), geom = "point") +
geom_point(size = 2) +
xlab("Enabled Users") +
ylab("30 Day Unique Users") +
stat_smooth(method = "lm", level = .99) +
theme_bw(base_size = 18)
mod.e <- lm(d30 ~ enabledusers, data = subset(cscd.df, enabledusers < sub_num))
summary(mod.e)
qplot(enabledusers, d30, data = subset(cscd.df, enabledusers < sub_num), geom = "point") +
geom_point(size = 2, alpha = .5) +
xlab("Enabled Users") +
ylab("30 Day Unique Users") +
stat_smooth(method = "lm", level = .99) +
theme_bw(base_size = 18)
ddply(.data = cscd.df, .(),
summarise,
meanseats = mean(totalseats),
medianseats = median(totalseats),
sumseats = sum(totalseats),
d30 = sum(d30),
subs = length(edition))
ddply(.data = cscd.df, .(edition), summarise,
meanseats = mean(totalseats),
medianseats = median(totalseats),
q75seats = quantile(totalseats, .75),
sumseats = sum(totalseats),
d30 = mean(p30),
subs = length(edition))
ddply(.data = cscd.df, .(),
summarise,
meanseats = mean(totalseats),
medianseats = median(totalseats),
sumseats = sum(totalseats),
d30 = sum(d30),
subs = length(edition))
ddply(.data = cscd.df, .(edition), summarise,
meanseats = mean(totalseats),
medianseats = median(totalseats),
q75seats = quantile(totalseats, .75),
sumseats = sum(totalseats),
d30 = mean(p30),
subs = length(edition))
hist(cscd.df$totalseats)
hist(log10(cscd.df$totalseats))
x <- 4L
class(x)
x <- c(4, TRUE)
class(x)
x <- c(1,3, 5)
y <- c(3, 2, 10)
cbind(x,y)
x <- list(2, "a", "b", TRUE)
x[[2]]
y <- x[[2]]
class(y)
y
x <- 1:4
y <- 2
x+y
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x >= 11] <- 4
x
x[x > 10] == 4
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x > 10] == 4
x
read.csv('hw1_data.csv')
setwd("~/Dev/non_work_projects/data_science_coursera/r_programming")
read.csv('hw1_data.csv')
read.csv('quiz_1_data.csv')
df <- read.csv('quiz_1_data.csv')
colnames(df)
head(df,2)
tail(df,2)
dim(df)
df$Ozone[47]
is.na(df$Ozone)
sum(is.na(df$Ozone))
mean(df$Ozone, na.rm=T)
subset(df$Solar.R, Ozone > 31 & Temp > 90)
subset(df$Solar.R, df$Ozone > 31 & df$Temp > 90)
mean(subset(df$Solar.R, df$Ozone > 31 & df$Temp > 90))
subset(df$Temp, df$Month == 6)
mean(subset(df$Temp, df$Month == 6))
max(subset(df$Ozone, df$Month == 5))
max(subset(df$Ozone, df$Month == 5), na.rm=T)
install.packages("swirl")  # Installs swirl
library(swirl)  # Loads swirl
swirl()  # Runs swirl
5 + 7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1,9,3.14)
?c
z
c(z, 555, z)
z * 2 + 100
sqrt(z - 1)
mySqrt <- sqrt(z - 1)
mySqrt
myDiv <- z/mySqrt
myDiv
c(1,2,3,4) + c(0, 10)
c(1,2,3,4) + c(0, 10, 100)
1
setwd("~/Dev/non_work_projects/data_science_coursera/r_programming/hw1")
source(getmonitor)
source('getmonitor.R')
id = 1
directory = 'specdata'
df <- getmonitor(id[i], directory)
id = 1
directory = 'specdata'
source('getmonitor.R')
id
getmonitor(id, directory)
id = 1:10
id
for (i in 1:length(id)) {
df <- getmonitor(id[i], directory)
data$id[i] <- id[i]
data$nobs[i] <- sum(complete.cases(df))
}
length(id)
df <- getmonitor(id[i], directory)
data$id[i] <- id[i]
id[i]
data <- data.frame(matrix(ncol = 2, nrow = length(id)))
colnames(data) <- c('id','nobs')
for (i in 1:length(id)) {
df <- getmonitor(id[i], directory)
data$id[i] <- id[i]
data$nobs[i] <- sum(complete.cases(df))
}
data
df
head(df)
pollutant = 'sulfate'
pollutant
df$[pollutant]
df$[[pollutant]]
df[[pollutant]]
df[pollutant]
mean(df[pollutant], na.rm=T)
df[pollutant]
mean(df[pollutant])
mean(df[pollutant]), na.rm=T)
mean(df[pollutant], na.rm=T)
mean(df[pollutant], rm.na=T)
?mean
mean(df[[pollutant]], na.rm=T)
exist(all)
exist('all')
exists('all')
exists(all)
exists('all')
exists('df_all')
df
if exists('df_all') {
df_all <- rbind(df,all)
} else {
df_all <- df
}
if exists('df_all') {
df_all <- rbind(df,df_all)
} else {
df_all <- df
}
if (exists('df_all')) {
df_all <- rbind(df,df_all)
} else {
df_all <- df
}
df_all
id
rm(df_all)
rm(df_all)
for (i in 1:length(id)) {
df <- getmonitor(id[i], directory)
if (exists('df_all')) {
df_all <- rbind(df,df_all)
} else {
df_all <- df
}
#     data$id[i] <- id[i]
#     data$pollutantmean[i] <- mean(df[[pollutant]], na.rm=T)
}
df_all
str(df_all)
df_all[[pollutant]]
mean(df_all[[pollutant]], na.rm=T)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
##| Example Output
# source("pollutantmean.R")
# pollutantmean("specdata", "sulfate", 1:10)
# ## [1] 4.064
# pollutantmean("specdata", "nitrate", 70:72)
# ## [1] 1.706
# pollutantmean("specdata", "nitrate", 23)
# ## [1] 1.281
data <- data.frame(matrix(ncol = 2, nrow = length(id)))
colnames(data) <- c('id','nobs')
source('getmonitor.R')
#   id = 1:10
#   pollutant = 'sulfate'
#   directory = 'specdata'
#   getmonitor(id, directory)
rm(df_all)
for (i in 1:length(id)) {
df <- getmonitor(id[i], directory)
if (exists('df_all')) {
df_all <- rbind(df,df_all)
} else {
df_all <- df
}
}
pollutant_mean = mean(df_all[[pollutant]], na.rm=T)
return(data)
}
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
##| Example Output
# source("pollutantmean.R")
# pollutantmean("specdata", "sulfate", 1:10)
# ## [1] 4.064
# pollutantmean("specdata", "nitrate", 70:72)
# ## [1] 1.706
# pollutantmean("specdata", "nitrate", 23)
# ## [1] 1.281
data <- data.frame(matrix(ncol = 2, nrow = length(id)))
colnames(data) <- c('id','nobs')
source('getmonitor.R')
#   id = 1:10
#   pollutant = 'sulfate'
#   directory = 'specdata'
#   getmonitor(id, directory)
rm(df_all)
for (i in 1:length(id)) {
df <- getmonitor(id[i], directory)
if (exists('df_all')) {
df_all <- rbind(df,df_all)
} else {
df_all <- df
}
}
pollutant_mean = mean(df_all[[pollutant]], na.rm=T)
return(data)
}
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
setwd("~/Dev/non_work_projects/data_science_coursera/r_programming/hw1")
id = 1:10
pollutant = 'sulfate'
directory = 'specdata'
for (i in 1:length(id)) {
df <- getmonitor(id[i], directory)
if (exists('df_all')) {
df_all <- rbind(df,df_all)
} else {
df_all <- df
}
}
df_all
pollutant_mean = mean(df_all[[pollutant]], na.rm=T)
pollutant_mean
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source('getmonitor.R')
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
source("submitscript1.R")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit()
submit()
submit()
submit()
submit()
submit()
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
submit()
submit()
submit()
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr <- corr("specdata", 5000)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
submit()
submit()
submit()
setwd("~/Dev/non_work_projects/data_science_coursera/r_programming/hw1")
source('getmonitor.R')
df <- getmonitor(id[i], directory)
id=1
df <- getmonitor(id[i], directory)
i = 1
df <- getmonitor(id[i], directory)
directory = specdata
directory = 'specdata'
df <- getmonitor(id[i], directory)
ifelse(exists('df_all'), df_all <- rbind(df,df_all), df_all <- df)
exists('df_all')
rm('df_all')
exists('df_all')
df_all <- df
ifelse(exists('df_all'), df_all <- rbind(df,df_all), df_all <- df)
x <- c(6:-4)
x
sqrt(x)
sqrt(ifelse(x >= 0, x, NA))  # no warning
if (exists('df_all')) df_all <- rbind(df,df_all) else df_all <- df)
if (exists('df_all')) df_all <- rbind(df,df_all) else df_all <- df
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
data <- vector("numeric", length = 0)
data
list_files <- list.files(path = paste(c('./',directory,'/'), collapse = ''))
?append
ddply(mtcars, "cyl", each(nrow, ncol))
library(plyr)
ddply(mtcars, "cyl", each(nrow, ncol))
mtcars
ddply(mtcars, ~ cyl, each(nrow, ncol))
ddply(mtcars, .(cyl), each(nrow, ncol))
ddply(mtcars, .(log(cyl)), each(nrow, ncol))
ddply(mtcars, .(logcyl = log(cyl)), each(nrow, ncol))
directory <- 'specdata'
list_files <- list.files(path = paste(c('./',directory,'/'), collapse = ''))
data <- vector("numeric", length = 0)
for (i in 1:length(list_files)) {
filename = paste(c('./',directory,'/',list_files[i]), collapse = '')
df = read.csv(filename)
if (sum(complete.cases(df)) >= threshold) {
cr <- cor(df$nitrate, df$sulfate, use = "complete.obs")
data <- append(data, cr)
}
}
threshold = 1
list_files <- list.files(path = paste(c('./',directory,'/'), collapse = ''))
data <- vector("numeric", length = 0)
for (i in 1:length(list_files)) {
filename = paste(c('./',directory,'/',list_files[i]), collapse = '')
df = read.csv(filename)
if (sum(complete.cases(df)) >= threshold) {
cr <- cor(df$nitrate, df$sulfate, use = "complete.obs")
data <- append(data, cr)
}
}
data
ddply(mtcars, .(logcyl = log(cyl)), each(nrow, ncol))
ddply(mtcars, .(vs + am), each(nrow, ncol))
mtcars
ddply(mtcars, .(vsam = vs + am), each(nrow, ncol))
setwd("~/Dev/non_work_projects/data_science_coursera/r_programming/hw2")
require(graphics)
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
cause = c('Heart Attack','Heart Failure','Pneumonia')
ind = c(11,17,23)
par(mfrow = c(3, 1))
for (i in 1:length(cause)) {
x <- as.numeric(outcome[, ind[i]])
median_val <- median(x, na.rm = T)
title_list <- list(t1 = cause[i],
num = mean(x, na.rm = T)
)
hist(x,
main = substitute(t1 * " (" * bar(x) * " = " * num * ")" ,title_list),
xlab = '30-day Death Rate',
xlim=c(5,20),
col = 'green',
prob = T
)
lines(density(x, na.rm = T), col = 4, lwd = 3)
abline(v = median_val, col = "orange", lwd = 4)
}
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
require(graphics)
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
cause = c('Heart Attack','Heart Failure','Pneumonia')
ind = c(11,17,23)
par(mfrow = c(3, 1))
for (i in 1:length(cause)) {
x <- as.numeric(outcome[, ind[i]])
median_val <- median(x, na.rm = T)
title_list <- list(t1 = cause[i],
num = mean(x, na.rm = T)
)
hist(x,
main = substitute(t1 * " (" * bar(x) * " = " * num * ")" ,title_list),
xlab = '30-day Death Rate',
xlim=c(5,20),
col = 'green',
prob = T
)
lines(density(x, na.rm = T), col = 4, lwd = 3)
abline(v = median_val, col = "orange", lwd = 4)
}
outcome[, 11] <- as.numeric(outcome[, 11])
names_state <- names(table(outcome$State)[table(outcome$State) >= 20])
outcome2 <- subset(outcome, outcome$State %in% names_state)
death <- outcome2[, 11]
state <- outcome2$State
par(mfrow = c(1, 1))
par(las = 2)
boxplot(death ~ state,
main = "Heart Attack 30-day Death Rate by State",
ylab = "30-day Death Rate",
cex.axis=.7)
str(InsectSprays)
bymedian <- with(InsectSprays, reorder(spray, count, median))
boxplot(count ~ bymedian, data = InsectSprays,
xlab = "Type of spray", ylab = "Insect count",
main = "InsectSprays data", varwidth = TRUE,
col = "lightgray")
state_by_median <- reorder(state, death, median)
boxplot(death ~ state_by_median,
main = "Heart Attack 30-day Death Rate by State",
ylab = "30-day Death Rate",
cex.axis=.7)
